#compdef dot_main

_dot() {
  local context curcontext="$curcontext" state line
  _arguments -C \
    '1: :->cmds' \
    '-h[Show this help message.]' \
    '*::arg:->args' \
    && ret=0

  case $state in
    cmds)
      _values "dot commands"\
        "clone[Clone dotfile repository on your computer with git.]" \
        "pull[Pull remote dotfile repository (by git).]" \
        "list[Show the list which files will be managed by dot.]" \
        "set[Make symbolic link interactively.]" \
        "add[Move the file to the dotfile dir and make a symbolic link.]" \
        "edit[Edit \$dotlink.]" \
        "unlink[Unlink the selected symbolic link and copy its original file from the dotfile repository.]" \
        "clear[Remove the all symbolic link in the config file \$dotlink.]" \
        "config[Edit (or create) rcfile \$dotrc.]" \
        && ret=0
      ;;
    args)
      local subcmd=$line[1]
      case $subcmd in
        "clone"|"unlink")
          _path_files && ret=0
          ;;
        "pull")
          _values "options"\
            '--self[Update dot framework from repository.]'\
            && ret=0
          ;;
        "add")
          _arguments \
            '*: :_path_files' \
            && ret=0
          ;;
        "set")
          _values "options"\
            '-i[No interaction mode(skip all conflicts).]' \
            '-v[Print verbose messages.]' \
            && ret=0
          ;;
      esac
      ;;
  esac

  return ret
}
